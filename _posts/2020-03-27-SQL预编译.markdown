---
layout: post
title:  "SQL预编译"
date:   2020-03-27 21:47:36
categories: SQL
---

### 预编译语句的作用

*   提高效率。数据库处理一个SQL语句，需要完成解析SQL语句、检查语法和语义以及生成代码；一般说来，处理时间要比执行语句所需要的时间长。预编译语句在创建的时候已经是将指定的SQL语句发送给了DBMS，完成了解析、检查、编译等工作。因此，当一个SQL语句需要执行多次时，使用预编译语句可以减少处理时间，提高执行效率。
*   提高安全性。防止SQL注入。SQL注入即是指Web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在Web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。因为预编译已经将查询语句的格式固定，因此不能再篡改SQL，只能按照固定的格式进行查询等操作。

### 预编译的SQL语句

预编译语句PreparedStatement 是java.sql中的一个接口，它是Statement的子接口。通过Statement对象执行SQL语句时，需要将SQL语句发送给DBMS（数据库管理系统），由DBMS首先进行编译后再执行。预编译语句和Statement不同，**在创建PreparedStatement 对象时就指定了SQL语句，该语句立即发送给DBMS进行编译。当该编译语句被执行时，DBMS直接运行编译后的SQL语句，而不需要像其他SQL语句那样首先将其编译**。预编译的SQL语句处理性能稍微高于普通的传递变量的办法。

##### Java中的预编译

创建 PreparedStatement 对象

``` java
conn = DriverManager.getConnection(DB_URL,USER,PASS); //连接数据库
String sql = "insert into websites (`name`, `url`, `alexa`, `country`) values (?,?,?,?)"; //创建一条含有参数的SQL语句，包含四个占位符
PreparedStatement stmt = conn.prepareStatement(sql); //PreparedStatement对象stmt包含语句sql，它已发送给DBMS，并为执行作好了准备。
stmt.setString(1, "百度");
stmt.setString(2, "www.baidu.com");
stmt.setInt(3, 2);
stmt.setString(4,"China"); // 传递每个 ? 处的值
```

[SQL语句预编译]: https://blog.csdn.net/Firefly_zh/article/details/86218897